{"version":3,"file":"static/js/387.08253d77.chunk.js","mappings":"qPAEMA,EAAmBC,EAAAA,EAAAA,IAAH,6CAIhBC,EAAQD,EAAAA,EAAAA,GAAH,iHAQLE,EAAOF,EAAAA,EAAAA,GAAH,mFAMJG,EAAOH,EAAAA,EAAAA,GAAH,kF,SCgBV,EA/BgB,WACd,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GASR,OAPAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAAII,MAAK,SAAAC,GACpB,IAAQC,EAAYD,EAAZC,QACRP,EAAWO,EACZ,GACF,GAAE,CAACN,KAGF,UAACR,EAAD,YACE,SAACE,EAAD,uBAEA,SAACC,EAAD,UACsB,IAAnBG,EAAQS,OACPT,EAAQU,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,UAACd,EAAD,YACE,uBAAIa,KACJ,uBAAIC,MAFKV,EADD,KAOZ,wEAKT,C,8LChCKW,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAa,mCAAG,oGACGD,EAAAA,EAAAA,IAAA,qBAAgC,CACrDE,OAAQ,CACNC,QAASJ,KAHO,cACdN,EADc,yBAMbA,EAASW,KAAKV,SAND,2CAAH,qDASbW,EAAW,mCAAG,WAAMC,GAAN,uFACKN,EAAAA,EAAAA,IAAA,eAA0B,CAC/CE,OAAQ,CACNC,QAASJ,EACTQ,MAAOD,KAJO,cACZb,EADY,yBAOXA,EAASW,MAPE,2CAAH,sDAUXI,EAAiB,mCAAG,WAAMpB,GAAN,uFACDY,EAAAA,EAAAA,IAAA,gBAAmBZ,GAAM,CAC9Cc,OAAQ,CACNC,QAASJ,KAHW,cAClBN,EADkB,yBAMjBA,EAASW,MANQ,2CAAH,sDASjBK,EAAS,mCAAG,WAAMrB,GAAN,uFACOY,EAAAA,EAAAA,IAAA,gBAAmBZ,EAAnB,YAAiC,CACtDc,OAAQ,CACNC,QAASJ,KAHG,cACVN,EADU,yBAMTA,EAASW,MANA,2CAAH,sDASTb,EAAY,mCAAG,WAAMH,GAAN,uFACIY,EAAAA,EAAAA,IAAA,gBAAmBZ,EAAnB,YAAiC,CACtDc,OAAQ,CACNC,QAASJ,KAHM,cACbN,EADa,yBAMZA,EAASW,MANG,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","service/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst ReviewsContainer = styled.div`\n  margin-top: 24px;\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 24px;\n\n  font-size: 36px;\n  font-weight: 600;\n  line-height: 42px;\n`;\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nconst Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport { ReviewsContainer, Title, List, Item };\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'service/api';\nimport { ReviewsContainer, Title, List, Item } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchReviews(id).then(response => {\n      const { results } = response;\n      setReviews(results);\n    });\n  }, [id]);\n\n  return (\n    <ReviewsContainer>\n      <Title>Reviews</Title>\n\n      <List>\n        {reviews.length !== 0 ? (\n          reviews.map(({ id, author, content }) => (\n            <Item key={id}>\n              <b>{author}</b>\n              <p>{content}</p>\n            </Item>\n          ))\n        ) : (\n          <p>We don't have any reviews for this movie</p>\n        )}\n      </List>\n    </ReviewsContainer>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '84acf63cced10e4fb48b321130e5907f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nconst fetchMovies = async searchQuery => {\n  const response = await axios.get(`search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n    },\n  });\n  return response.data;\n};\n\nconst fetchMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nconst fetchCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nconst fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport {\n  fetchTrending,\n  fetchMovies,\n  fetchMovieDetails,\n  fetchCast,\n  fetchReviews,\n};\n"],"names":["ReviewsContainer","styled","Title","List","Item","useState","reviews","setReviews","id","useParams","useEffect","fetchReviews","then","response","results","length","map","author","content","API_KEY","axios","fetchTrending","params","api_key","data","fetchMovies","searchQuery","query","fetchMovieDetails","fetchCast"],"sourceRoot":""}