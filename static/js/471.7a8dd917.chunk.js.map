{"version":3,"file":"static/js/471.7a8dd917.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/Movie/Movie.styled.jsx","components/Movie/Movie.jsx","pages/MovieDetails.jsx","service/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  padding: 8px 16px;\n\n  font-weight: 500;\n  text-decoration: none;\n\n  border-radius: 4px;\n  color: black;\n\n  transition: background-color 250ms linear, color 250ms linear;\n\n  &:hover {\n    color: white;\n    background-color: #b18742;\n  }\n`;\n","import { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return <StyledLink to={to}>{children}</StyledLink>;\n};\n","import styled from '@emotion/styled';\n\nconst MovieInfo = styled.div`\n  display: flex;\n  gap: 32px;\n\n  margin-top: 32px;\n  margin-bottom: 24px;\n\n  font-size: 18px;\n  line-height: 24px;\n`;\n\nconst MovieDetailedInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nconst MovieTitle = styled.h1`\n  font-size: 36px;\n  font-weight: 600;\n  line-height: 42px;\n`;\n\nconst List = styled.ul`\n  display: flex;\n  gap: 16px;\n\n  font-size: 18px;\n  line-height: 24px;\n`;\n\nexport { MovieInfo, MovieDetailedInfo, MovieTitle, List };\n","import { useEffect, useState } from 'react';\nimport { MovieInfo, MovieDetailedInfo, MovieTitle, List } from './Movie.styled';\n\nexport const Movie = ({\n  title,\n  overview,\n  poster,\n  released = '',\n  genres = [],\n  rating,\n}) => {\n  const [releaseDate, setRealeaseDate] = useState('999 BC');\n  const defaultMoviePoster =\n    'https://m.media-amazon.com/images/M/MV5BMDFiMzFiNTYtNDY2Yy00ZjhhLWIyZGMtNmM4ZDA4YjJlNjA0XkEyXkFqcGdeQXVyMjQwMDg0Ng@@._V1_.jpg';\n\n  useEffect(() => {\n    const year = released.split('-');\n    setRealeaseDate(year[0]);\n  }, [released]);\n\n  return (\n    <MovieInfo>\n      <img\n        src={\n          poster !== undefined\n            ? 'https://image.tmdb.org/t/p/w500' + poster\n            : defaultMoviePoster\n        }\n        alt=\"Movie poster\"\n        width=\"300\"\n      />\n      <MovieDetailedInfo>\n        <MovieTitle>\n          {title} ({releaseDate})\n        </MovieTitle>\n\n        <p>\n          <b>User score: </b>\n          {Math.floor(rating * 10)}%\n        </p>\n\n        <b>Overview: </b>\n        <p>{overview}</p>\n\n        <b>Genres: </b>\n        <List>\n          {genres.map(({ id, name }) => (\n            <li key={id}>{name}</li>\n          ))}\n        </List>\n      </MovieDetailedInfo>\n    </MovieInfo>\n  );\n};\n","import { useState, useEffect, Suspense, useRef } from 'react';\nimport { useLocation, useParams, Link, Outlet } from 'react-router-dom';\nimport { fetchMovieDetails } from 'service/api';\nimport { BackLink } from '../components/BackLink/BackLink';\nimport { Movie } from '../components/Movie/Movie';\n\nconst MoviesDetails = () => {\n  const { id } = useParams();\n  const location = useLocation();\n  const [movie, setMovie] = useState({});\n  const backLinkRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    fetchMovieDetails(id).then(setMovie);\n  }, [id]);\n\n  const { title, overview, poster_path, release_date, genres, vote_average } =\n    movie;\n\n  return (\n    <>\n      <BackLink to={backLinkRef.current}>Go Back</BackLink>\n      <Movie\n        title={title}\n        overview={overview}\n        poster={poster_path}\n        released={release_date}\n        genres={genres}\n        rating={vote_average}\n      />\n\n      <b>Additional information: </b>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n\n      <Suspense fallback={<div>Loading page...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\nconst API_KEY = '84acf63cced10e4fb48b321130e5907f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nconst fetchMovies = async searchQuery => {\n  const response = await axios.get(`search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n    },\n  });\n  return response.data;\n};\n\nconst fetchMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nconst fetchCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nconst fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport {\n  fetchTrending,\n  fetchMovies,\n  fetchMovieDetails,\n  fetchCast,\n  fetchReviews,\n};\n"],"names":["StyledLink","styled","Link","BackLink","to","children","MovieInfo","MovieDetailedInfo","MovieTitle","List","Movie","title","overview","poster","released","genres","rating","useState","releaseDate","setRealeaseDate","useEffect","year","split","src","undefined","alt","width","Math","floor","map","id","name","useParams","location","useLocation","movie","setMovie","backLinkRef","useRef","state","from","fetchMovieDetails","then","poster_path","release_date","vote_average","current","Suspense","fallback","API_KEY","axios","fetchTrending","params","api_key","response","data","results","fetchMovies","searchQuery","query","fetchCast","fetchReviews"],"sourceRoot":""}